public static String hi() {
 return ("Hello World"); 
}
public static int add(int a, int b) {
  return a + b;
}
public static String byteToHex(byte b) {
  int data = b & 0xFF; return Integer.toHexString(data);
}
public static Date currentDate() {
  return new Date();
}
public static int subtract(int a, int b) {
  return a - b;
}
public static String trim2(String s) {
  String result = ""; String[] vargs = s.split(" "); for (int i = 0; i < vargs.length; i++) result = result.concat(vargs[i]); return result;
}
public static boolean flip(boolean b) {
  return !b;
}
public static void getPowaLVL(int p) {
  System.out.println("Nappa: Vegeta, what does the scouter say about his power level?"); System.out.println("Scouter: Calculating power level... beep boop... " + p); if (p > 9000) { System.out.println("Vegeta: It's OVER NEIN THOUSAAAAAAND"); System.out.println("Nappa: What 9000?! That can't be right!");} return;
}
public static void hug(String user) {
  System.out.println("I luv you " + user + "! CalcBot hugs " + user + " <3");
}
public static void cuteHi(String user) {
  System.out.println("Hi " + user + " =w=/");
}
public static void sad() {
  System.out.println("Aww :'(");
}
public static float randFloat(int by) {
  return new Random().nextFloat() * by;
}
public static String time() {
  Date d = new Date(); int h = d.getHours(); int m = d.getMinutes(); if (m < 10) { return (h + ":0" + m); } else { return (h + ":" + m); }
}
public static void lol() {
  for (int i = 0; i < 45; i++) System.out.print("lo");
}
public static int multInt(int a, int b) {
  return a * b;
}
public static int addAll(int... array) {
  int result = 0; for (int i = 0; i < array.length; i++) result += array[i]; return result;
}
public static void omnom(String obj) {
  System.out.println("\01ACTION eats " + obj + "\01"); return;
}
public static void sleep(long seconds) {
  try { Thread.sleep(seconds * 1000); } catch (Exception e) {} System.out.println("I have finally awoken!"); return;
}
public static void timemsg(long s, String m) {
  try { Thread.sleep(s * 1000); } catch (Exception e) {} System.out.println(m); return;
}
